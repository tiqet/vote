# Voting System Configuration Template
# Copy this file to .env and customize for your environment

# ðŸ”’ CRITICAL SECURITY CONFIGURATION - REQUIRED FOR PRODUCTION

# Cryptographic salts (MUST be changed in production)
# Generate secure 32-byte salts and encode as base64
# Example generation: openssl rand -base64 32
CRYPTO_VOTER_SALT=CHANGE_THIS_IN_PRODUCTION_base64_encoded_32_bytes_minimum
CRYPTO_TOKEN_SALT=CHANGE_THIS_IN_PRODUCTION_base64_encoded_32_bytes_minimum

# Key management settings
CRYPTO_KEY_EXPIRY_SECONDS=86400  # 24 hours
CRYPTO_MAX_OPS_PER_SECOND=10     # Rate limiting for crypto operations
CRYPTO_MAX_TIMESTAMP_AGE_SECONDS=300  # 5 minutes max for replay protection

# Logging Configuration
LOG_LEVEL=info  # debug, info, warn, error
LOG_FORMAT=json # json, pretty

# ðŸš¨ PRODUCTION SECURITY CHECKLIST:
#
# 1. Generate unique salts using: openssl rand -base64 32
# 2. Store salts in secure key management system (HSM/Vault)
# 3. Enable audit logging in production
# 4. Set up monitoring for rate limit violations
# 5. Implement key rotation procedures
# 6. Use HTTPS/TLS for all communications
# 7. Regular security audits and penetration testing
#
# PCI DSS Compliance Requirements:
# - Document all cryptographic algorithms used
# - Maintain inventory of cryptographic keys
# - Annual review of cryptographic implementations
# - Secure key lifecycle management

# Future configuration will be added as we build more components:
# - Database connections
# - Server configuration
# - Czech BankID integration